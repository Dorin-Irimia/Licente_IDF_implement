  static uint32_t u32OldAngle = 1500;
 static  uint32_t servoSpeed = 50;

  uint32_t potVal; //valoarea citita de la web
  uint32_t potStop = 0 ;   
  uint32_t servoStart;

    
double InputStart = 0;      // 0 is first value at the first range
double InputStop = 180;      // 10 is last value at the first range

double OutputStart = 0;     // 0 is first value at the second range
double OutputStop = 65000;    // 100 is a last value at the second range

  potVal = ( potVal - InputStart ) / ( InputStop - InputStart ) * ( OutputStop - OutputStart ) + OutputStart;  

 if(potVal > potStop) 
 {
      int32_t potSpeed = potStop - potVal;
     servoStart = servoStop + (servoSpeed + potSpeed);
     PWM_vSetDutyCycle(SERVO_MOTOR_PWM_CHANNEL, servoStart);
 }
    else if ( potVal < potStop)
        {
             int32_t potSpeed = potStop - potVal;
            servoStart = servoStop - (servoSpeed - potSpeed);
           PWM_vSetDutyCycle(SERVO_MOTOR_PWM_CHANNEL, servoStart);
        }

        else 
        PWM_vSetDutyCycle(SERVO_MOTOR_PWM_CHANNEL, u32OldAngle);

        potStop = potVal;
        servoStart = 0;
 
